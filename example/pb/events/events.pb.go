// Code generated by protoc-gen-go. DO NOT EDIT.
// source: example/proto/events/events.proto

package events // import "pb/events"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"
import empty "github.com/golang/protobuf/ptypes/empty"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PushNotificationEventDataReq struct {
	EventType            string               `protobuf:"bytes,1,opt,name=event_type,json=eventType,proto3" json:"event_type,omitempty"`
	RequestData          *any.Any             `protobuf:"bytes,2,opt,name=RequestData,proto3" json:"RequestData,omitempty"`
	ResponseData         *any.Any             `protobuf:"bytes,3,opt,name=ResponseData,proto3" json:"ResponseData,omitempty"`
	CreatedOn            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=created_on,json=createdOn,proto3" json:"created_on,omitempty"`
	UserId               string               `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *PushNotificationEventDataReq) Reset()         { *m = PushNotificationEventDataReq{} }
func (m *PushNotificationEventDataReq) String() string { return proto.CompactTextString(m) }
func (*PushNotificationEventDataReq) ProtoMessage()    {}
func (*PushNotificationEventDataReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_events_713db261fbe49693, []int{0}
}
func (m *PushNotificationEventDataReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushNotificationEventDataReq.Unmarshal(m, b)
}
func (m *PushNotificationEventDataReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushNotificationEventDataReq.Marshal(b, m, deterministic)
}
func (dst *PushNotificationEventDataReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushNotificationEventDataReq.Merge(dst, src)
}
func (m *PushNotificationEventDataReq) XXX_Size() int {
	return xxx_messageInfo_PushNotificationEventDataReq.Size(m)
}
func (m *PushNotificationEventDataReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PushNotificationEventDataReq.DiscardUnknown(m)
}

var xxx_messageInfo_PushNotificationEventDataReq proto.InternalMessageInfo

func (m *PushNotificationEventDataReq) GetEventType() string {
	if m != nil {
		return m.EventType
	}
	return ""
}

func (m *PushNotificationEventDataReq) GetRequestData() *any.Any {
	if m != nil {
		return m.RequestData
	}
	return nil
}

func (m *PushNotificationEventDataReq) GetResponseData() *any.Any {
	if m != nil {
		return m.ResponseData
	}
	return nil
}

func (m *PushNotificationEventDataReq) GetCreatedOn() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedOn
	}
	return nil
}

func (m *PushNotificationEventDataReq) GetUserId() string {
	if m != nil {
		return m.UserId
	}
	return ""
}

func init() {
	proto.RegisterType((*PushNotificationEventDataReq)(nil), "events.PushNotificationEventDataReq")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// EventValidatorsClient is the client API for EventValidators service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type EventValidatorsClient interface {
	Push(ctx context.Context, in *PushNotificationEventDataReq, opts ...grpc.CallOption) (*empty.Empty, error)
}

type eventValidatorsClient struct {
	cc *grpc.ClientConn
}

func NewEventValidatorsClient(cc *grpc.ClientConn) EventValidatorsClient {
	return &eventValidatorsClient{cc}
}

func (c *eventValidatorsClient) Push(ctx context.Context, in *PushNotificationEventDataReq, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/events.EventValidators/Push", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// EventValidatorsServer is the server API for EventValidators service.
type EventValidatorsServer interface {
	Push(context.Context, *PushNotificationEventDataReq) (*empty.Empty, error)
}

func RegisterEventValidatorsServer(s *grpc.Server, srv EventValidatorsServer) {
	s.RegisterService(&_EventValidators_serviceDesc, srv)
}

func _EventValidators_Push_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushNotificationEventDataReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(EventValidatorsServer).Push(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/events.EventValidators/Push",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(EventValidatorsServer).Push(ctx, req.(*PushNotificationEventDataReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _EventValidators_serviceDesc = grpc.ServiceDesc{
	ServiceName: "events.EventValidators",
	HandlerType: (*EventValidatorsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Push",
			Handler:    _EventValidators_Push_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "example/proto/events/events.proto",
}

func init() {
	proto.RegisterFile("example/proto/events/events.proto", fileDescriptor_events_713db261fbe49693)
}

var fileDescriptor_events_713db261fbe49693 = []byte{
	// 297 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0xcf, 0x4b, 0xc3, 0x30,
	0x14, 0x80, 0xdd, 0x9c, 0x93, 0x66, 0x82, 0x10, 0x44, 0x6b, 0x55, 0x9c, 0xc3, 0xc3, 0x4e, 0x2d,
	0x4c, 0x10, 0x3d, 0x2a, 0x4e, 0xf0, 0xa2, 0x12, 0x86, 0xa0, 0x97, 0x92, 0xae, 0x6f, 0x33, 0xb0,
	0x26, 0x59, 0xf3, 0x2a, 0xf6, 0xec, 0x3f, 0x2e, 0x4d, 0x53, 0xd0, 0x0d, 0x76, 0x0a, 0x79, 0xef,
	0xfb, 0x78, 0xbf, 0xc8, 0x05, 0x7c, 0xf3, 0x4c, 0x2f, 0x20, 0xd2, 0xb9, 0x42, 0x15, 0xc1, 0x17,
	0x48, 0x34, 0xee, 0x09, 0x6d, 0x8c, 0x76, 0xeb, 0x5f, 0x70, 0x32, 0x57, 0x6a, 0xde, 0x90, 0x49,
	0x31, 0x8b, 0x20, 0xd3, 0x58, 0xd6, 0x50, 0x70, 0xbe, 0x9a, 0x44, 0x91, 0x81, 0x41, 0x9e, 0x69,
	0x07, 0x1c, 0xaf, 0x02, 0x5c, 0x3a, 0x77, 0xf0, 0xd3, 0x26, 0xa7, 0xaf, 0x85, 0xf9, 0x7c, 0x56,
	0x28, 0x66, 0x62, 0xca, 0x51, 0x28, 0x39, 0xae, 0x6a, 0x3e, 0x70, 0xe4, 0x0c, 0x96, 0xf4, 0x8c,
	0x10, 0xdb, 0x43, 0x8c, 0xa5, 0x06, 0xbf, 0xd5, 0x6f, 0x0d, 0x3d, 0xe6, 0xd9, 0xc8, 0xa4, 0xd4,
	0x40, 0xaf, 0x49, 0x8f, 0xc1, 0xb2, 0x00, 0x63, 0x05, 0xbf, 0xdd, 0x6f, 0x0d, 0x7b, 0xa3, 0x83,
	0xb0, 0x2e, 0x18, 0x36, 0x05, 0xc3, 0x3b, 0x59, 0xb2, 0xbf, 0x20, 0xbd, 0x21, 0x7b, 0x0c, 0x8c,
	0x56, 0xd2, 0x80, 0x15, 0xb7, 0x37, 0x88, 0xff, 0x48, 0x7a, 0x4b, 0xc8, 0x34, 0x07, 0x8e, 0x90,
	0xc6, 0x4a, 0xfa, 0x1d, 0xeb, 0x05, 0x6b, 0xde, 0xa4, 0x59, 0x01, 0xf3, 0x1c, 0xfd, 0x22, 0xe9,
	0x11, 0xd9, 0x2d, 0x0c, 0xe4, 0xb1, 0x48, 0xfd, 0x1d, 0x3b, 0x48, 0xb7, 0xfa, 0x3e, 0xa5, 0xa3,
	0x77, 0xb2, 0x6f, 0x87, 0x7e, 0xe3, 0x0b, 0x91, 0x72, 0x54, 0xb9, 0xa1, 0x8f, 0xa4, 0x53, 0xed,
	0x85, 0x5e, 0x86, 0xee, 0x20, 0x9b, 0xb6, 0x14, 0x1c, 0xae, 0x35, 0x30, 0xae, 0x0e, 0x34, 0xd8,
	0xba, 0xef, 0x7d, 0x78, 0x3a, 0x71, 0x47, 0x4d, 0xba, 0x36, 0x7d, 0xf5, 0x1b, 0x00, 0x00, 0xff,
	0xff, 0x2a, 0xe6, 0x9d, 0xf5, 0xfa, 0x01, 0x00, 0x00,
}
